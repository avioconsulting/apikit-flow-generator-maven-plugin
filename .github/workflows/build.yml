name: Build and Publish

on:
  push:
    branches:
      - 'main'
      - 'feature/**'
  pull_request:
    branches:
      - 'main'

jobs:
  Build-and-Publish:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.set-version.outputs.version }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Set up JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: adopt-hotspot
          java-version: 8
          cache: maven
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase:  MAVEN_GPG_PASSPHRASE

      - name: Set Version
        id: set-version
        run: echo ::set-output name=version::$(./mvnw -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)

      - name: Print Version
        run: echo "Version ${{ steps.set-version.outputs.version }}"

      - name: Compile
        run: ./mvnw compile

      - name: Verify
        run: ./mvnw --batch-mode verify

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: ./**/surefire-reports/*.xml

      - name: Publish to Maven Central
        id: publish-to-maven-central
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'}}
        run: ./mvnw clean deploy -Drelease=true
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

  Perform-Release:
    runs-on: ubuntu-latest
    needs: Build-and-Publish

    steps:
      - name: Print Version
        run: echo "Version ${{ needs.Build-and-Publish.outputs.version }}"
      - name: Print Event
        run: echo "Event ${{ github.event_name }}"
      - name: Print Ref
        run: echo "Ref ${{ github.ref }}"
